import subprocess
import shutil
import sys
import os

def check_tools():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ffmpeg, exiftool –∏ AtomicParsley —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."""
    for tool in ["ffmpeg", "exiftool", "AtomicParsley"]:
        if shutil.which(tool) is None:
            sys.exit(f"‚ùå {tool} –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏ –µ–≥–æ –∏ –¥–æ–±–∞–≤—å –≤ PATH.")

def fix_with_atomicparsley(file_path):
    """AtomicParsley —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å MP4/M4V/M4A."""
    cmd = [
        "AtomicParsley", file_path, "--overWrite",
        "--title", "Core Media Video",
        "--artist", "Apple",
        "--album", "iPhone 13 Pro",
        "--comment", "Recorded on iOS 16.6.1",
        "--stik", "Camera",
        "--genre", "Video"
    ]
    subprocess.run(cmd, check=True)

def convert_to_mov(input_mp4, final_mov):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è MP4 ‚Üí MOV —Å –∞–π—Ñ–æ–Ω–æ–ø–æ–¥–æ–±–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏."""
    cmd = [
        "ffmpeg", "-i", input_mp4,
        # –í–∏–¥–µ–æ –∫–∞–∫ —É iPhone: H.264 High@L4.0
        "-c:v", "libx264", "-profile:v", "high", "-level:v", "4.0",
        "-pix_fmt", "yuv420p",
        "-preset", "medium", "-crf", "20",
        # –ê—É–¥–∏–æ: AAC LC (mp4a-40-2)
        "-c:a", "aac", "-profile:a", "aac_low", "-b:a", "128k",
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        "-map_metadata", "-1",
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–π—Ñ–æ–Ω–æ–≤—Å–∫–∏–µ
        "-metadata", "com.apple.quicktime.make=Apple",
        "-metadata", "com.apple.quicktime.model=iPhone 13 Pro",
        "-metadata", "com.apple.quicktime.software=iOS 16.6.1",
        "-metadata", "com.apple.quicktime.creationdate=2025-09-16T07:01:23+0000",
        "-metadata", "major_brand=mp42",
        "-metadata", "compatible_brands=isom/mp41/mp42",
        "-metadata", "creation_time=2025-09-16T07:01:23Z",
        "-metadata", "tagged_date=2025-09-16T07:01:24Z",
        "-metadata", "encoder=Apple QuickTime",
        # –ü–æ—Ç–æ–∫–∏
        "-metadata:s:v:0", "title=Core Media Video",
        "-metadata:s:v:0", "encoder=Apple H.264",   # –ó–∞—Ç–∏—Ä–∞–µ–º x264 core
        "-metadata:s:a:0", "title=Core Media Audio",
        # –ì–µ–æ
        "-metadata", "com.apple.quicktime.location.ISO6709=+43.0731-089.4012+0.000/",
        final_mov
    ]
    subprocess.run(cmd, check=True)

def fix_with_exiftool(file_path):
    """–î–æ–ø–∏—Å—ã–≤–∞–µ–º QuickTime-–∞—Ç—Ä–∏–±—É—Ç—ã."""
    cmd = [
        "exiftool",
        "-overwrite_original",
        "-QuickTime:Make=Apple",
        "-QuickTime:Model=iPhone 13 Pro",
        "-QuickTime:Software=iOS 16.6.1",
        "-QuickTime:CreationDate=2025:09:16 07:01:23",
        file_path
    ]
    subprocess.run(cmd, check=True)

if __name__ == "__main__":
    check_tools()

    input_file = "input.mp4"
    final_file = "final.mov"

    print("üé® –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (AtomicParsley, MP4)...")
    fix_with_atomicparsley(input_file)

    print("‚úç –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º MP4 ‚Üí MOV —Å –∞–π—Ñ–æ–Ω–æ–ø–æ–¥–æ–±–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...")
    convert_to_mov(input_file, final_file)

    print("üõ† –ß–∏—Å—Ç–∏–º –∏ –¥–æ–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—è (ExifTool, MOV)...")
    fix_with_exiftool(final_file)

    print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {final_file}")
